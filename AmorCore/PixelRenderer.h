#pragma once

#include "Graphics.h"
#include "ShaderFactory.h"

#ifdef DEFINE_RENDERER_PIXEL
#include <glad/glad.h>
#include <GLFW/glfw3.h>
#endif 

namespace amor {
	namespace graphics {


		/*
			A Pixel Shader Effect allows you to specify new functionality to the shader before it is compiled.
			The effect setup string should specify a function that accepts a pixel and outputs a pixel
		*/
		class PixelShaderEffect {
		public:
			virtual void WriteEffectFunction(amor::graphics::utils::opengl::ShaderFactory&) = 0;
			virtual const std::string GetFunctionName() const = 0;
		};

		class PixelTintEffect : public PixelShaderEffect {
		public:
			PixelTintEffect(const Color& color, float strength);
			void WriteEffectFunction(amor::graphics::utils::opengl::ShaderFactory&) override;
			const std::string GetFunctionName() const override;
		private:
			Color m_TintColor;
			float m_TintStrength;
			std::string m_FnName;
		};

		// brightness contrast effect
		class BCSEffect : public PixelShaderEffect {
		public:
			BCSEffect(float, float, float);

			void WriteEffectFunction(amor::graphics::utils::opengl::ShaderFactory&) override;
			const std::string GetFunctionName() const override;

		private:
			float m_Brightness, m_Contrast, m_Saturation;
			std::string m_Name;
		};

		constexpr u32 BASE_FONT_SIZE = 12;

		class PixelFont {
		public:
			PixelFont();
			PixelFont(const std::string& filename);
			~PixelFont();

			Texture& get_char(char letter);
			math::Rect get_size(char letter);

		protected:
			void load(const std::string& filename);
			void load_default();
			void gen_null_texture();

		protected:
			Texture *m_NullTexture;
			Texture *m_TextureAtlas[256];
		};

		class PixelRenderer : public RendererBase, public PrimitiveContext2D {
		public:
			PixelRenderer(u32 width, u32 height, u32 pixelWidth, u32 pixelHeight);
			PixelRenderer(const Resolution& res);
			~PixelRenderer();

		public:
			void AddEffect(PixelShaderEffect&);
			void RemoveEffect(PixelShaderEffect&);
			void UpdateShader();

		public:
			void InitializeGraphicsPipeline() override;
			void InitializeWindowGraphicsPipeline(WindowBase* window) override;
			void DeinitializeGraphicsPipeline(WindowBase* window) override;

			void PrepareFrame(WindowBase* win) override;
			void RenderFrame(WindowBase* win) override;
			void PostRenderFrame(WindowBase* win) override;

		public:
			void DrawText(i32 x, i32 y, const std::string& data, PixelFont& font);

		private:
			void CompileShader();

		private:
			u32 m_VAO, m_VBO;
			u32 m_ProgramID;
			u32 m_glFrameTexture;
			Color* m_PixelData;
			size_t m_PixelDataLength;
			u32 m_Width, m_Height, m_PixWidth, m_PixHeight;
			u32 m_uniTexture;
			std::vector<PixelShaderEffect*> m_Effects;
		};



#ifdef DEFINE_RENDERER_PIXEL
#undef DEFINE_RENDERER_PIXEL
		using amor::graphics::utils::opengl::ShaderFactory;

		PixelTintEffect::PixelTintEffect(const Color& color, float strength) {
			m_TintColor = color;
			m_TintStrength = strength;
			m_FnName = "custom_tint_" + std::to_string((size_t)(void*)this);
		}

		void PixelTintEffect::WriteEffectFunction(ShaderFactory& shader) {
			float r, g, b, a;
			r = (float)m_TintColor.r / 255.0f;
			g = (float)m_TintColor.g / 255.0f;
			b = (float)m_TintColor.b / 255.0f;
			a = (float)m_TintColor.a / 255.0f;
			
			shader.RawStatement(("vec4 " + m_FnName + "(vec4 pixel){\n").c_str());
			shader.RawStatement(("float strength = " + std::to_string(m_TintStrength) + ";\n").c_str());
			shader.RawStatement(("vec4 tintColor = vec4(" + std::to_string(r) + ", " + std::to_string(g) + ", " + std::to_string(b) + ", " + std::to_string(a) + ") * strength;\n").c_str());
			shader.RawStatement(("vec4 inverseTint = vec4(" + std::to_string(1.0 - r) + ", " + std::to_string(1.0 - g) + ", " + std::to_string(1.0 - b) + ", " + std::to_string(1.0 - a) + ") * (1.0 - strength);\n").c_str());
			shader.RawStatement("return pixel * tintColor + pixel * inverseTint;\n");
			shader.RawStatement("}\n");
		}
		const std::string PixelTintEffect::GetFunctionName() const {
			return m_FnName;
		}


		BCSEffect::BCSEffect(float brightness, float contrast, float saturation) {
			m_Name = "custom_bcs_" + std::to_string((size_t)(void*)this);
			m_Brightness = brightness;
			m_Contrast = contrast;
			m_Saturation = saturation;
		}
		void BCSEffect::WriteEffectFunction(ShaderFactory& shader) {
		
			shader.RawStatement(("vec4 " + m_Name + "(vec4 pixel){\n").c_str());

			shader.RawStatement(("float brightness = " + std::to_string(m_Brightness) + ";\n").c_str());
			shader.RawStatement(("float contrast = " + std::to_string(m_Contrast) + ";\n").c_str());
			shader.RawStatement(("float saturation = " + std::to_string(m_Saturation) + ";\n").c_str());

			shader.RawStatement("mat4 brightnessMat = mat4(1, 0, 0, 0,    0, 1, 0, 0,    0, 0, 1, 0,    brightness, brightness, brightness, 1);\n");
			shader.RawStatement("float c_T = (1.0 - contrast) / 2.0;\n");
			shader.RawStatement("mat4 contrastMat = mat4(contrast, 0, 0, 0,    0, contrast, 0, 0,    0, 0, contrast, 0,    c_T, c_T, c_T, 1);\n");
			shader.RawStatement("vec3 lumi = vec3(0.3086, 0.6094, 0.0820); float oneMinusSat = 1.0 - saturation;\n");
			shader.RawStatement("vec3 red = vec3(lumi.x * oneMinusSat); red += vec3(saturation, 0, 0);\n");
			shader.RawStatement("vec3 green = vec3(lumi.y * oneMinusSat); green += vec3(0, saturation, 0);\n");
			shader.RawStatement("vec3 blue = vec3(lumi.z * oneMinusSat); blue += vec3(0, 0, saturation);\n");
			shader.RawStatement("mat4 saturationMat = mat4( red, 0,   green, 0,   blue, 0,   0, 0, 0, 1);\n");

			shader.RawStatement("return brightnessMat * contrastMat * saturationMat * pixel;\n");

			shader.RawStatement("}\n");
		}
		const std::string BCSEffect::GetFunctionName() const {
			return m_Name;
		}

		PixelRenderer::PixelRenderer(u32 width, u32 height, u32 pixelWidth, u32 pixelHeight) :
			m_Width(width), m_Height(height), m_PixWidth(pixelWidth), m_PixHeight(pixelHeight),
			m_VAO(0), m_VBO(0), m_glFrameTexture(0), m_uniTexture(0),
			PrimitiveContext2D(width, height, nullptr) {

			m_PixelDataLength = width * height;
			m_PixelData = new Color[m_PixelDataLength];

			// PrimitiveContext2D handle to pixel data.
			// this is an unowned pointer, m_PixelData is owned
			m_Pixels = m_PixelData;
		}

		PixelRenderer::PixelRenderer(const Resolution& res) :
			m_Width(res.width), m_Height(res.height), m_PixWidth(res.pixelWidth), m_PixHeight(res.pixelHeight),
			m_VAO(0), m_VBO(0), m_glFrameTexture(0), m_uniTexture(0),
			PrimitiveContext2D(res.width, res.height, nullptr) {

			m_PixelDataLength = res.width * res.height;
			m_PixelData = new Color[m_PixelDataLength];

			// PrimitiveContext2D handle to pixel data.
			// this is an unowned pointer, m_PixelData is owned
			m_Pixels = m_PixelData;
		}

		PixelRenderer::~PixelRenderer() {
			if (m_PixelData != nullptr) {
				delete[] m_PixelData;
				m_PixelData = nullptr;
			}
		}

		void PixelRenderer::AddEffect(PixelShaderEffect& effect) {
			m_Effects.push_back(&effect);
		}
		void PixelRenderer::RemoveEffect(PixelShaderEffect& effect) {
			for (size_t i = 0; i < m_Effects.size(); ++i) {
				if (m_Effects[i] == &effect) {
					m_Effects.erase(m_Effects.begin() + i);
					return;
				}
			}
		}
		void PixelRenderer::UpdateShader() {
			logging::GetInstance()->info("Recompiling shader", "PixelRenderer");
			
			u32 currentProgramID = m_ProgramID;

			try {
				CompileShader();
			}
			catch (std::runtime_error& e) {
				logging::GetInstance()->error("Failed to recompile shader, falling back", "PixelRenderer");
				m_ProgramID = currentProgramID;
				return;
			}

			if (currentProgramID != 0) {
				glDeleteProgram(currentProgramID);
			}
		}

		void PixelRenderer::DrawText(i32 x, i32 y, const std::string& message, PixelFont& font) {
			int cursorX, cursorY;
			cursorX = x;
			cursorY = y;

			for (u32 i = 0; i < message.length(); i++) {
				if (message[i] == '\r') {
					cursorX = x;
					continue;
				}
				if (message[i] == '\n') {
					cursorX = x;
					cursorY += font.get_size('|').height;
					continue;
				}
				if (message[i] == '\t') {
					cursorX += font.get_size(' ').x * 4;
					continue;
				}

				Texture& tex = font.get_char(message[i]);
				this->Blit(cursorX, cursorY, tex);
				cursorX += font.get_size(message[i]).width;
			}
		}

		void PixelRenderer::InitializeGraphicsPipeline() {
			glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
			glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
			glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
#ifdef __APPLE__
			glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);
#endif
			glfwWindowHint(GLFW_RESIZABLE, false);
		}
		void PixelRenderer::InitializeWindowGraphicsPipeline(WindowBase* window) {
			static float s_vertices[]{
				-1.0f, -1.0f, 0.0f,    0.0f, 1.0f,
				-1.0f,  1.0f, 0.0f,    0.0f, 0.0f,
				 1.0f, -1.0f, 0.0f,    1.0f, 1.0f,

				 1.0f, -1.0f, 0.0f,    1.0f, 1.0f,
				-1.0f,  1.0f, 0.0f,    0.0f, 0.0f,
				 1.0f,  1.0f, 0.0f,    1.0f, 0.0f,
			};

			glfwMakeContextCurrent(window->internal_ptr());
			if (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)) {
				logging::GetInstance()->fail("ProcLoad failed", "GLAD");
				throw std::runtime_error("GLAD load");
			}
			auto& rect = window->size();
			glViewport(rect.x, rect.y, rect.width, rect.height);


			// initialize array objects and buffers
			glGenVertexArrays(1, &m_VAO);
			glBindVertexArray(m_VAO);

			glGenBuffers(1, &m_VBO);
			glBindBuffer(GL_ARRAY_BUFFER, m_VBO);
			glBufferData(GL_ARRAY_BUFFER, sizeof(s_vertices), s_vertices, GL_STATIC_DRAW);

			glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(float), (void*)0);
			glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(float), (void*)(3 * sizeof(float)));

			glEnableVertexAttribArray(0);
			glEnableVertexAttribArray(1);

			CompileShader();

			// init frame texture
			glGenTextures(1, &m_glFrameTexture);
			glBindTexture(GL_TEXTURE_2D, m_glFrameTexture);

			glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);
			glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);
			glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
			glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);

			// initialize 
		}

		void PixelRenderer::CompileShader() {
			using Prim = amor::graphics::utils::opengl::GlPrimitive;

			ShaderFactory pixelShader;

			// vertex shader
			pixelShader.Version("330 core");

			pixelShader.InParam("vPos", Prim::Vec3);
			pixelShader.InParam("vUv", Prim::Vec2);
			pixelShader.OutParam("fragCoord", Prim::Vec2);
			pixelShader.Main();
			pixelShader.RawStatement("gl_Position = vec4(vPos, 1.0);\n");
			pixelShader.RawStatement("fragCoord = vUv;\n");
			pixelShader.EndMain();

			pixelShader.WriteVertex();

			// fragment shader
			pixelShader.Version("330 core");

			pixelShader.OutParam("fragColor", Prim::Vec4);
			pixelShader.InParam("fragCoord", Prim::Vec2, amor::graphics::utils::opengl::NO_LAYOUT);
			pixelShader.UniformParam("framebuffer", Prim::Sampler2D);

			std::string callValue = "texture(framebuffer, fragCoord)";
			for (size_t index = 0; index < m_Effects.size(); ++index) {
				m_Effects[index]->WriteEffectFunction(pixelShader);

				callValue = m_Effects[index]->GetFunctionName() + "(" + callValue + ")";
			}
			callValue = "fragColor = " + callValue + ";\n";

			pixelShader.Main();
			pixelShader.RawStatement(callValue.c_str());
			pixelShader.EndMain();

			pixelShader.WriteFragment();

			m_ProgramID = pixelShader.CompileGlProgram();
			if (m_ProgramID == 0) {
				logging::GetInstance()->fail("Failed to compile default shader", "PixelRenderer");
				throw std::runtime_error("comiler error");
			}
			logging::GetInstance()->info(std::string("Applied ") + std::to_string(m_Effects.size()) + std::string(" custom effects to the pixel shader"), "PixelRenderer");
			logging::GetInstance()->info("Pixel Shader compiled", "PixelRenderer");

			glUseProgram(m_ProgramID);

			m_uniTexture = glGetUniformLocation(m_ProgramID, "framebuffer");
		}

		void PixelRenderer::DeinitializeGraphicsPipeline(WindowBase* window) {
			glDeleteVertexArrays(1, &m_VAO);
			glDeleteBuffers(1, &m_VBO);

			glDeleteProgram(m_ProgramID);
		}

		void PixelRenderer::PrepareFrame(WindowBase* win) {
			glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
			glClear(GL_COLOR_BUFFER_BIT);
		}
		void PixelRenderer::RenderFrame(WindowBase* win) {
			glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, (GLsizei)m_Width, (GLsizei)m_Height, 0, GL_RGBA, GL_UNSIGNED_BYTE, m_PixelData);
			glGenerateMipmap(GL_TEXTURE_2D);

			glBindTexture(GL_TEXTURE_2D, m_glFrameTexture);
			glUseProgram(m_ProgramID);
			glUniform1i(m_uniTexture, 0);
			glBindVertexArray(m_VAO);

			glDrawArrays(GL_TRIANGLES, 0, 6);
		}
		void PixelRenderer::PostRenderFrame(WindowBase* win) {

		}

		PixelFont::PixelFont() : m_NullTexture{ new graphics::Texture{ BASE_FONT_SIZE, BASE_FONT_SIZE } } {
			gen_null_texture();

			for (i32 c = 0; c < 256; c++) {
				m_TextureAtlas[c] = nullptr;
			}

			load_default();
		}

		PixelFont::PixelFont(const std::string& filename) : m_NullTexture{ new graphics::Texture{ BASE_FONT_SIZE, BASE_FONT_SIZE } } {
			gen_null_texture();
			for (i32 c = 0; c < 256; c++) {
				m_TextureAtlas[c] = nullptr;
			}
			load(filename);
		}
		PixelFont::~PixelFont() {
			for (i32 c = 0; c < 256; c++) {
				if (m_TextureAtlas[c] != nullptr) {
					delete m_TextureAtlas[c];
				}
			}

			if (m_NullTexture != nullptr) {
				delete m_NullTexture;
			}
		}

		Texture& PixelFont::get_char(char ch) {
			byte c = (byte)ch;
			if (m_TextureAtlas[c] == nullptr) {
				return *m_NullTexture;
			}
			if (m_TextureAtlas[c]->data() == nullptr) {
				return *m_NullTexture;
			}
			return *m_TextureAtlas[c];
		}

		math::Rect PixelFont::get_size(char ch) {
			byte c = (byte)ch;
			Texture* tex = m_NullTexture;
			if (m_TextureAtlas[c]->data() != nullptr) {
				tex = m_TextureAtlas[c];
			}

			return { (i32)tex->width(), (i32)tex->height() };
		}

		void PixelFont::load(const std::string& filename) {
			// todo load
		}

		void PixelFont::gen_null_texture() {
			auto context = m_NullTexture->GetContext();

			context.Clear({ 0, 0, 0, 0 });
			
			/*context.DrawRect(0, 0, BASE_FONT_SIZE, BASE_FONT_SIZE, { 255, 255, 255, 255 });
			context.DrawRect(1, 1, BASE_FONT_SIZE - 1, BASE_FONT_SIZE - 1, { 255, 255, 255, 255 });

			context.DrawLine(0, 0, BASE_FONT_SIZE, BASE_FONT_SIZE, { 255, 255, 255, 255 });
			context.DrawLine(BASE_FONT_SIZE, 0, 0, BASE_FONT_SIZE, { 255, 255, 255, 255 });*/
		}

#pragma region DEFAULT FONT DATA
#define BLANK "0C0C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
		static const char* DEFAULT_FONT_DATA = "00" BLANK "01" BLANK "02" BLANK "03" BLANK "04" BLANK "05" BLANK "06" BLANK "07" BLANK "08" BLANK "09" BLANK "0A" BLANK "0B" BLANK "0C" BLANK "0D" BLANK "0E" BLANK "0F" BLANK
		"10" BLANK "11" BLANK "12" BLANK "13" BLANK "14" BLANK "15" BLANK "16" BLANK "17" BLANK "18" BLANK "19" BLANK "1A" BLANK "1B" BLANK "1C" BLANK "1D" BLANK "1E" BLANK "1F" BLANK
		"20" BLANK ""
		"210C0C0000000000FFFF000000000000000000FFFFFFFF0000000000000000FFFFFFFF0000000000000000FFFFFFFF0000000000000000FFFFFFFF0000000000000000FFFFFFFF000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000000000000000000000000000FFFF00000000000000000000FFFF0000000000"
		"220C0C000000FFFF00FFFF00000000000000FFFF00FFFF0000000000000000FF0000FF00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
		"230C0C000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000FFFFFFFFFFFFFFFFFFFFFFFF0000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF000000FFFFFFFFFFFFFFFFFFFFFFFF00FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF00000000"
		"240C0C0000000000FF000000000000000000FFFFFFFFFF000000000000FFFF00FF00FFFF0000000000FFFF00FF0000000000000000FFFF00FF000000000000000000FFFFFFFF00000000000000000000FF00FF000000000000000000FF00FFFF0000000000000000FF00FFFF0000000000FFFF00FF00FFFF000000000000FFFFFFFFFF000000000000000000FF000000000000"
		"250C0C0000FFFF000000000000000000FF0000FF0000000000FF0000FF0000FF00000000FFFF000000FFFF00000000FFFF000000000000000000FFFF000000000000000000FFFF000000000000000000FFFF000000000000000000FFFF000000000000000000FFFF000000FFFF00000000FFFF000000FF0000FF0000FFFF00000000FF0000FF000000000000000000FFFF0000"
		"260C0C00FFFFFF0000000000000000FFFFFFFFFF00000000000000FFFF0000FFFF000000000000FFFF0000FFFF00000000000000FFFFFFFF000000000000000000FFFF00000000FFFF00000000FFFFFFFF0000FFFF000000FFFFFFFFFFFFFFFF000000FFFF00000000FFFFFF000000FFFF000000FFFF00FFFF0000FFFFFFFFFFFF000000FFFF0000FFFFFFFF0000000000FF00"
		"270C0C0000000000FFFF00000000000000000000FFFF0000000000000000000000FF0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
		"280C0C000000000000FFFF000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000000000FFFF00000000000000000000FFFF0000000000000000000000FFFF00000000"
		"290C0C00000000FFFF0000000000000000000000FFFF00000000000000000000FFFF0000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF000000000000"
		"2A0C0C0000000000FF000000000000000000FFFFFFFFFF0000000000000000FFFFFF0000000000000000FFFFFFFFFF0000000000000000FF00FF0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
		"2B0C0C0000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000000000000000000000000000000000000000000000"
		"2C0C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF000000000000"
		"2D0C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
		"2E0C0C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000"
		"2F0C0C00000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF00000000000000000000FFFF000000000000"
		"300C0C0000000000FFFF000000000000000000FFFFFFFF00000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF00000000000000FFFFFFFF000000000000000000FFFF0000000000"
		"310C0C0000000000FFFF000000000000000000FFFFFF0000000000000000FFFFFFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000"
		"320C0C00000000FFFFFFFF00000000000000FFFFFFFFFFFF000000000000FFFF0000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF000000000000000000FFFFFF0000000000000000FFFFFF0000000000000000FFFFFF000000000000000000FFFF00000000000000000000FFFFFFFFFFFF000000000000FFFFFFFFFFFF000000"
		"330C0C00000000FFFFFF0000000000000000FFFFFFFFFF00000000000000FFFF0000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000FFFFFF000000000000000000FFFFFF0000000000000000000000FFFF00000000000000000000FFFF000000000000FFFF0000FFFF000000000000FFFFFFFFFF0000000000000000FFFFFF0000000000"
		"340C0C0000000000000000FF00000000000000000000FFFF000000000000000000FFFFFF0000000000000000FFFFFFFF00000000000000FFFF00FFFF000000000000FFFF0000FFFF000000000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF0000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000"
		"350C0C000000FFFFFFFFFFFF000000000000FFFFFFFFFFFF000000000000FFFF00000000000000000000FFFF00000000000000000000FFFFFFFFFF0000000000000000FFFFFFFFFF00000000000000000000FFFFFF00000000000000000000FFFF00000000000000000000FFFF0000000000FFFF0000FFFFFF0000000000FFFFFFFFFFFF0000000000000000FFFF0000000000"
		"360C0C0000000000FFFFFFFF000000000000FFFFFFFFFFFF0000000000FFFFFF000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00FFFFFF000000000000FFFFFFFFFFFFFF0000000000FFFFFF0000FFFFFF00000000FFFF00000000FFFF00000000FFFFFF0000FFFFFF0000000000FFFFFFFFFFFF00000000000000FFFFFFFF00000000"
		"370C0C000000FFFFFFFFFFFFFF0000000000FFFFFFFFFFFFFF00000000000000000000FFFF000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000"
		"380C0C00000000FFFFFFFF00000000000000FFFFFFFFFFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF00000000000000FFFFFFFF0000000000000000FFFFFFFF00000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFFFFFFFFFF00000000000000FFFFFFFF00000000"
		"390C0C00000000FFFFFFFFFF000000000000FFFFFFFFFFFFFF00000000FFFFFF000000FFFFFF000000FFFF0000000000FFFF000000FFFFFF000000FFFFFF00000000FFFFFFFFFFFFFFFF0000000000FFFFFFFFFFFFFF000000000000000000FFFFFF000000000000000000FFFF000000000000000000FFFFFF0000000000FFFFFFFFFFFF000000000000FFFFFFFFFF00000000"
		"3A0C0C0000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF0000000000000000000000000000000000000000000000000000000000"
		"3B0C0C0000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF000000000000000000000000000000000000"
		"3C0C0C000000000000000000000000000000000000000000000000000000000000FFFFFF0000000000000000FFFFFF0000000000000000FFFFFF0000000000000000FFFFFF0000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF000000000000000000000000000000"
		"3D0C0C0000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF0000000000000000000000000000000000000000000000000000000000000000000000000000"
		"3E0C0C000000000000000000000000000000000000000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF0000000000000000FFFFFF0000000000000000FFFFFF0000000000000000FFFFFF0000000000000000FFFFFF000000000000000000000000000000000000"
		"3F0C0C0000000000FFFFFF0000000000000000FFFFFFFFFF000000000000FFFFFF0000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF000000000000000000FFFFFF0000000000000000FFFFFF0000000000000000FFFFFF000000000000000000FFFF00000000000000000000000000000000000000000000FFFF00000000000000000000FFFF0000000000"
		"400C0C000000FFFFFFFFFFFFFF00000000FF00000000000000FF0000FF00000000FFFFFF0000FFFF000000FFFFFFFFFFFF00FFFF000000FFFF0000FFFF00FFFF0000FFFF000000FFFF00FFFF0000FFFF0000FFFF0000FFFF000000FFFFFFFFFF0000FF00FF000000FFFF00FF0000FF00FF00000000000000FFFF000000FFFF000000000000000000000000FFFFFFFFFF000000"
		"410C0C00000000FFFFFF00000000000000FFFFFF00FFFFFF0000000000FFFF000000FFFF00000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFFFFFFFFFFFFFFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF0000"
		"420C0C0000FFFFFFFFFFFFFF0000000000FFFFFFFFFFFFFFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFF0000000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFF000000"
		"430C0C00000000FFFFFFFF000000000000FFFFFFFFFFFFFFFF00000000FFFF00000000FFFF000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000000000FFFF00000000FFFF00000000FFFFFFFFFFFFFFFF000000000000FFFFFFFF00000000"
		"440C0C0000FFFFFFFFFF00000000000000FFFFFFFFFFFFFF0000000000FFFF000000FFFF0000000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF000000FFFF0000000000FFFFFFFFFFFFFF0000000000FFFFFFFFFF0000000000"
		"450C0C0000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFFFFFFFFFF000000000000FFFFFFFFFFFF000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF0000"
		"460C0C0000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFFFFFFFFFF000000000000FFFFFFFFFFFF000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000"
		"470C0C000000FFFFFFFFFFFF0000000000FFFFFFFFFFFFFFFF000000FFFFFF00000000FFFF000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000FFFFFFFF000000FFFF000000FFFFFFFF000000FFFF0000000000FFFF00000000FFFF00000000FFFF00000000FFFFFFFFFFFFFFFF0000000000FFFFFFFFFFFF000000"
		"480C0C00FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF00"
		"490C0C0000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF00000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000FFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF0000"
		"4A0C0C000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000FFFF00FFFF00000000000000FFFFFFFFFF0000000000000000FFFFFF0000000000"
		"4B0C0C0000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF0000FFFFFF0000000000FFFF00FFFFFF000000000000FFFFFFFFFF00000000000000FFFFFFFF0000000000000000FFFF00FFFF00000000000000FFFF00FFFFFF000000000000FFFF0000FFFFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF000000"
		"4C0C0C0000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFFFFFFFFFFFF0000000000FFFFFFFFFFFFFF000000"
		"4D0C0C00FFFF000000000000FFFF0000FFFFFF00000000FFFFFF0000FFFFFFFF0000FFFFFFFF0000FFFFFFFFFFFFFFFFFFFF0000FFFF00FFFFFFFF00FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF00"
		"4E0C0C00FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFFFF0000000000FFFF0000FFFFFFFF00000000FFFF0000FFFF00FFFF000000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF000000FFFF00FFFF0000FFFF00000000FFFFFFFF0000FFFF0000000000FFFFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF00"
		"4F0C0C000000FFFFFFFFFFFF0000000000FFFFFFFFFFFFFFFF000000FFFFFF00000000FFFFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFFFF00000000FFFFFF000000FFFFFFFFFFFFFFFF0000000000FFFFFFFFFFFF000000"
		"500C0C00FFFFFFFFFFFF000000000000FFFFFFFFFFFFFF0000000000FFFF000000FFFFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF000000FFFFFF00000000FFFFFFFFFFFFFF0000000000FFFFFFFFFFFF000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000000000"
		"510C0C0000FFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF000000FFFFFFFF000000FFFF000000FFFFFFFF000000FFFF00000000FFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFF00FFFF"
		"520C0C0000FFFFFFFFFFFF000000000000FFFFFFFFFFFFFF0000000000FFFF000000FFFFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF000000FFFFFF00000000FFFFFFFFFFFFFF0000000000FFFFFFFFFF00000000000000FFFF000000FFFF0000000000FFFF000000FFFFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF0000"
		"530C0C00000000FFFFFFFF00000000000000FFFFFFFFFFFF0000000000FFFFFF0000FFFF0000000000FFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFFFF00000000000000000000FFFFFF00000000000000000000FFFF0000000000FFFF000000FFFF0000000000FFFFFFFFFFFFFF000000000000FFFFFFFFFF00000000"
		"540C0C00FFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFF000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000"
		"550C0C00FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF000000FFFF00000000FFFF00000000FFFFFFFFFFFFFFFF000000000000FFFFFFFF00000000"
		"560C0C00FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF000000FFFF00000000FFFF00000000FFFF00000000FFFF0000000000FFFF0000FFFF000000000000FFFFFFFFFFFF00000000000000FFFFFFFF000000000000000000FFFF00000000000000000000FFFF0000000000"
		"570C0CFFFF0000000000000000FFFFFFFF0000000000000000FFFFFFFF0000000000000000FFFFFFFF0000000000000000FFFF00FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF00FFFFFFFF00FFFF000000FFFFFFFFFFFFFFFF00000000FFFFFF0000FFFFFF0000000000FF00000000FF000000"
		"580C0CFFFFFF000000000000FFFFFF00FFFFFF00000000FFFFFF000000FFFFFF0000FFFFFF0000000000FFFFFFFFFFFF00000000000000FFFFFFFF000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFFFFFF00000000000000FFFFFFFFFFFF0000000000FFFFFF0000FFFFFF000000FFFFFF00000000FFFFFF00FFFFFF000000000000FFFFFF"
		"590C0C00FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFFFF00000000FFFFFF000000FFFFFF0000FFFFFF0000000000FFFFFFFFFFFF00000000000000FFFFFFFF000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000"
		"5A0C0CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000FFFF000000000000000000FFFFFF0000000000000000FFFFFF00000000000000FFFFFFFF000000000000FFFFFFFF00000000000000FFFFFF0000000000000000FFFFFF000000000000000000FFFF000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
		"5B0C0C00000000FFFFFFFF0000000000000000FFFFFFFF0000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFFFFFF0000000000000000FFFFFFFF00000000"
		"5C0C0CFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFF"
		"5D0C0C00000000FFFFFFFF0000000000000000FFFFFFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000FFFFFFFF0000000000000000FFFFFFFF00000000"
		"5E0C0C0000000000FFFF000000000000000000FFFFFFFF00000000000000FFFFFFFFFFFF0000000000FFFFFF0000FFFFFF00000000FFFF00000000FFFF0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
		"5F0C0C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFF00"
		"600C0C00000000FFFF00000000000000000000FFFFFF00000000000000000000FFFFFF00000000000000000000FFFF00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
		"610C0C00000000000000000000000000000000000000000000000000000000FFFFFFFF00000000000000FFFFFFFFFFFF0000000000FFFFFF0000FFFF0000000000FFFF000000FFFF0000000000000000FFFFFFFF000000000000FFFFFFFFFFFF0000000000FFFFFF0000FFFF0000000000FFFFFF0000FFFF000000000000FFFFFFFFFFFFFF000000000000FFFFFF00FFFF0000"
		"620C0C000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00FFFFFF000000000000FFFFFFFFFFFFFF0000000000FFFFFF0000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFFFFFFFFFFFF0000000000FFFFFFFFFFFF000000"
		"630C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFF00000000000000FFFFFFFFFF000000000000FFFFFF000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFFFF00000000000000000000FFFFFFFFFF0000000000000000FFFFFFFF000000"
		"640C0C000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000FFFFFFFFFFFF0000000000FFFFFFFFFFFFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFFFFFFFFFFFF000000000000FFFFFFFFFFFF00000000"
		"650C0C00000000000000000000000000000000000000000000000000000000FFFFFFFFFF000000000000FFFFFFFFFFFFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFFFFFFFFFFFF0000000000FFFFFFFFFFFF000000000000FFFF00000000000000000000FFFFFF00000000000000000000FFFFFFFFFF0000000000000000FFFFFFFF000000"
		"660C0C0000000000FFFFFF0000000000000000FFFFFFFF0000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000FFFFFFFFFFFF000000000000FFFFFFFFFFFF0000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000"
		"670C0C0000000000000000000000000000000000000000FFFF000000000000FFFFFFFFFFFF0000000000FFFFFFFFFFFFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFFFFFFFFFFFF000000000000FFFFFFFFFFFF00000000000000000000FFFF000000000000000000FFFFFF0000000000FFFFFFFFFFFF000000000000FFFFFFFFFF00000000"
		"680C0C0000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00FFFFFFFF0000000000FFFFFFFFFFFFFFFF00000000FFFFFF000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF0000"
		"690C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000"
		"6A0C0C0000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFFFF000000000000000000FFFF000000000000"
		"6B0C0C0000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000FFFF000000000000FFFF00FFFFFF000000000000FFFFFFFFFF00000000000000FFFFFFFF0000000000000000FFFF00FFFF00000000000000FFFF00FFFFFF000000000000FFFF0000FFFF00000000"
		"6C0C0C0000000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000"
		"6D0C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFF0000FFFFFF00000000FFFFFFFFFFFFFFFF000000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF00"
		"6E0C0C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFFFFFFFFFF000000000000FFFFFFFFFFFFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF00000000"
		"6F0C0C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFF00000000000000FFFFFFFFFFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFFFFFFFFFF00000000000000FFFFFFFF00000000"
		"700C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFF00000000000000FFFFFFFFFFFF000000000000FFFF0000FFFF000000000000FFFFFFFFFFFF000000000000FFFFFFFFFF00000000000000FFFF00000000000000000000FFFF0000000000000000"
		"710C0C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFF000000000000FFFFFFFFFFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFFFFFFFFFF00000000000000FFFFFFFFFF00000000000000000000FFFF00000000000000000000FFFF000000"
		"720C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00FFFF00000000000000FFFFFFFFFFFF000000000000FFFF0000FFFF000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000"
		"730C0C00000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFF00000000000000FFFFFFFFFFFF000000000000FFFF0000FFFF00000000000000FFFFFF0000000000000000000000FFFF0000000000000000000000FFFF000000000000FFFF0000FFFF000000000000FFFFFFFFFFFF00000000000000FFFFFF0000000000"
		"740C0C0000000000000000000000000000000000000000000000000000000000FFFF00000000000000000000FFFF0000000000000000FFFFFFFFFFFF000000000000FFFFFFFFFFFF0000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFFFF00000000000000000000FFFF00000000"
		"750C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF0000000000FFFF000000FFFF000000000000FFFFFFFFFF00FFFF00000000FFFFFFFFFF00FFFF00"
		"760C0C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFF0000FFFF000000000000FFFFFFFFFFFF00000000000000FFFFFFFF000000000000000000FFFF0000000000"
		"770C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00FFFF00FFFF00000000FFFFFFFFFFFFFFFF0000000000FFFF0000FFFF000000"
		"780C0C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFF00000000FFFFFF000000FFFF00000000FFFF0000000000FFFF0000FFFF00000000000000FFFFFFFF0000000000000000FFFFFFFF00000000000000FFFF0000FFFF0000000000FFFF00000000FFFF000000FFFFFF00000000FFFFFF00"
		"790C0C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFF00000000FFFF00000000FFFFFF0000FFFFFF0000000000FFFFFFFFFFFF00000000000000FFFFFFFF000000000000000000FFFF00000000000000000000FFFF000000000000000000FFFF0000000000000000FFFFFF000000000000"
		"7A0C0C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFF000000000000FFFFFFFFFFFF000000000000000000FFFF000000000000000000FFFF000000000000000000FFFF000000000000000000FFFFFFFFFFFF000000000000FFFFFFFFFFFF000000"
		"7B0C0C0000000000FFFFFFFF00000000000000FFFFFFFFFF000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000FFFF00000000000000000000FFFF000000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000000000000000FFFFFFFFFF0000000000000000FFFFFFFF000000"
		"7C0C0C0000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF0000000000"
		"7D0C0C000000FFFFFFFF0000000000000000FFFFFFFFFF0000000000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000000000000000FFFF00000000000000000000FFFF0000000000000000FFFF00000000000000000000FFFF00000000000000000000FFFF000000000000FFFFFFFFFF00000000000000FFFFFFFF0000000000"
		"7E0C0C000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFF00000000FFFF0000FFFFFFFFFF0000FFFFFF00FFFFFF00FFFFFFFFFFFF0000FFFF000000FFFFFFFF0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
		"7F0C0C00000000FFFFFFFFFF00000000000000FF00FF00FF00000000000000FF00FF00FF00000000000000FF00FF00FF00000000000000FF00FF00FF00000000000000FFFFFFFFFF00000000000000FFFFFFFFFF00000000000000FF00FF00FF00000000000000FF00FF00FF00000000000000FF00FF00FF00000000000000FF00FF00FF00000000000000FFFFFFFFFF000000"
		"800C0C0000000000FFFF000000000000000000FFFFFFFF00000000000000FFFF0000FFFF0000000000FFFF00FFFF00FFFF000000FFFFFFFFFFFF00FFFFFF00FFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFF00FFFFFFFFFF00FFFFFFFF00FFFFFFFFFF000000FFFFFFFFFFFFFFFF0000000000FFFF00FFFFFF00000000000000FFFFFFFF000000000000000000FFFF0000000000"
		"81" BLANK "82" BLANK "83" BLANK "84" BLANK "85" BLANK "86" BLANK "87" BLANK "88" BLANK "89" BLANK "8A" BLANK "8B" BLANK "8C" BLANK "8D" BLANK "8E" BLANK "8F" BLANK
		"90" BLANK "91" BLANK "92" BLANK "93" BLANK "94" BLANK "95" BLANK "96" BLANK "97" BLANK "98" BLANK "99" BLANK "9A" BLANK "9B" BLANK "9C" BLANK "9D" BLANK "9E" BLANK "9F" BLANK
		"A0" BLANK "A1" BLANK "A2" BLANK "A3" BLANK "A4" BLANK "A5" BLANK "A6" BLANK "A7" BLANK "A8" BLANK "A9" BLANK "AA" BLANK "AB" BLANK "AC" BLANK "AD" BLANK "AE" BLANK "AF" BLANK
		"B0" BLANK "B1" BLANK "B2" BLANK "B3" BLANK "B4" BLANK "B5" BLANK "B6" BLANK "B7" BLANK "B8" BLANK "B9" BLANK "BA" BLANK "BB" BLANK "BC" BLANK "BD" BLANK "BE" BLANK "BF" BLANK
		"C0" BLANK "C1" BLANK "C2" BLANK "C3" BLANK "C4" BLANK "C5" BLANK "C6" BLANK "C7" BLANK "C8" BLANK "C9" BLANK "CA" BLANK "CB" BLANK "CC" BLANK "CD" BLANK "CE" BLANK "CF" BLANK
		"D0" BLANK "D1" BLANK "D2" BLANK "D3" BLANK "D4" BLANK "D5" BLANK "D6" BLANK "D7" BLANK "D8" BLANK "D9" BLANK "DA" BLANK "DB" BLANK	"DC" BLANK "DD" BLANK "DE" BLANK "DF" BLANK
		"E0" BLANK "E1" BLANK "E2" BLANK "E3" BLANK "E4" BLANK "E5" BLANK "E6" BLANK "E7" BLANK "E8" BLANK "E9" BLANK "EA" BLANK "EB" BLANK "EC" BLANK "ED" BLANK "EE" BLANK "EF" BLANK
		"F0" BLANK "F1" BLANK "F2" BLANK "F3" BLANK "F4" BLANK "F5" BLANK "F6" BLANK "F7" BLANK "F8" BLANK "F9" BLANK "FA" BLANK "FB" BLANK "FC" BLANK "FD" BLANK "FE" BLANK "FF" BLANK;
		
#define FONT_DATA_LEN 75265
		
		byte _get_nibble(char c) {
			static const char* s_HexStr = "0123456789ABCDEF";
			for (i32 i = 0; i < 16; i++) {
				if (s_HexStr[i] == c) {
					return i;
				}
			}
			return -1;
		}
		byte _get_at(u64& offset) {
			byte result = 0;
			byte nibble = _get_nibble(DEFAULT_FONT_DATA[offset]);
			result |= nibble << 4;

			nibble = _get_nibble(DEFAULT_FONT_DATA[offset + 1]);
			result |= nibble;
			offset += 2;
			return result;
		}
	
		void PixelFont::load_default() {
			u64 data_offset = 0;
			for (i32 i = 0; i < 256; i++) {
				byte index = _get_at(data_offset);
				byte width = _get_at(data_offset);
				byte height = _get_at(data_offset);


				if (m_TextureAtlas[index] != nullptr) {
					delete m_TextureAtlas[index];
				}
				m_TextureAtlas[index] = new Texture{ width, height };
				PrimitiveContext2D ctx = m_TextureAtlas[index]->GetContext();

				for (i32 j = 0; j < height; j++) {
					for (i32 i = 0; i < width; i++) {
						byte v = _get_at(data_offset);
						ctx.Draw(i, j, { v, v, v, 255 });
					}
				}
			}
		}

#pragma endregion
#endif // DEFINE_RENDERER_PIXEL

	}
}